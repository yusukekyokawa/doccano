version: "3.7"
services:
  backend:
    build:
      context: ./Docker/backend
      dockerfile: Dockerfile
    volumes:
      - .:/src
      - venv:/src/venv
    # command: ["/src/app/tools/dev-django.sh","0.0.0.0:8000"]
    command: bash -c "
       /src/app/tools/dev-django.sh 0.0.0.0:8000
       && cd /src/app/server/static/package.json
       && npm install
       && npm start"
    environment:
      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "password"
      ADMIN_EMAIL: "admin@example.com"
      DATABASE_URL: "postgres://doccano:doccano@postgres:5432/doccano?sslmode=disable"
      ALLOW_SIGNUP: "False"
      DEBUG: "True"
    ports:
      - 8000:8000
    depends_on:
      - postgres
    networks:
      - network-backend
      - network-frontend

  frontend:
    image: node:13.7.0
    command: ["/src/frontend/dev-nuxt.sh"]
    volumes:
      - .:/src
      - node_modules:/src/frontend/node_modules
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - network-frontend
      - network-backend
  # 以下追加###
  https-portal:
    build:
        context: ./Docker/https-portal
        dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./log:/var/log/nginx
      - ./certs:/var/lib/https-portal
      - ./html:/var/www/vhosts/
    environment:
      STAGE: 'production'
     #  DOMAINS: 'localhost -> http://frontend:3000, doccano-admin.com -> http://backend:8000'
      DOMAINS: 'tk2.cc.gakushuin.ac.jp -> http://frontend:3000'
      TZ: 'Asia/Tokyo'
      ERROR_LOG: default
      ACCESS_LOG: default
    networks:
     - network-frontend
    depends_on:
      - backend
    ### 

  postgres:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "doccano"
      POSTGRES_PASSWORD: "doccano"
      POSTGRES_DB: "doccano"
    networks:
      - network-backend

volumes:
  postgres_data:
  node_modules:
  venv:

networks:
  network-backend:
  network-frontend:
